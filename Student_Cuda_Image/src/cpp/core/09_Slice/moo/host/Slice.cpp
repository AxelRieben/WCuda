#include "Slice.h";

/*----------------------------------------------------------------------*\
 |*			Declaration 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

/*----------------------------------------------------------------------*\
 |*			Implementation 					*|
 \*---------------------------------------------------------------------*/

/*--------------------------------------*\
 |*		Public			*|
 \*-------------------------------------*/

Slice::Slice(Grid& grid, int n)
    {
    this->grid = grid;
    this->n = n;
    this->pi = 0;

    ptrTab = new float[n];

    this->sizeTab = n * sizeof(float);
    Device::malloc(&ptrTabGM, sizeTab);
    Device::memcpyHToD(ptrTabGM, ptrTab, sizeTab);
    }

Slice::~Slice()
    {
    Device::free(ptrDevTabSphere);
    delete[] ptrTab;
    }

void Slice::run()
    {
    Device::lastCudaError("Slice (before)");

    sliceDevice<<<dg,db>>>(ptrTabGM,n);

    Device::lastCudaError("Slice (after)");
    }

float Slice::getPI()
    {
    return this->pi;
    }

/*--------------------------------------*\
 |*		Private			*|
 \*-------------------------------------*/

/*----------------------------------------------------------------------*\
 |*			End	 					*|
 \*---------------------------------------------------------------------*/

